
First:
------
    (X) New GUI design.

    (X) Create language selector dialog.
        (X) Load *.qm translation file from defined dir.

    (X) Package build information file support (*.pisido) will remove.
    (X) Switching to workspace concept. Will ask at the start of program.

    (X) Highlighter and automatic complete feature will add which is on stable branch now.
        (X) Python support will add to actions.py Action API text editor.
            (X) Syntax highlighter will add to editor.
            (X) Autocomplater will add to editor.

    (X) Redefine building steps.
        (X) Building steps will define. Pspec.xml creation, action.py creation,
            download archive, ... and later steps that pisi supports.

    (X) Import/Export pspec.xml file.
        (X) Design C++ class to package pspec information.
            (X) Load pisi info to QDomDocument from pspec.xml file by Pisi class.
            (X) Save pisi info to pspec.xml from GUI by Pisi class.
                (X) save_to_dom();
                    (X) Update
                    (X) Package::Files,
                    (X) Souce::Patches,
                    (X) SPBase::AdditionalFiles

    (X) Add line limit to console.

    (X) QFileSystemWatcher (or QFileSystemModel) will be used here :
        (X) __workspace__/__package_name__/
        (X) __workspace__/__package_name__/files/
        (X) /var/pisi/__package_name__/install/

    (X) Support for multiple archives in pspec.xml

    (X) Take root privilages for bash.
        pkexec --user root pisi bi pspec.xml --output-dir workspace

    (->) load from gui and save to gui for these:
        (*) Package::Files,
        (*) Souce::Patches,
        (*) SPBase::AdditionalFiles


    (->) Make build process.
        (*) __package_name__ will convert at the aditional_files

    (*) check gui tab order.
    (*) check gui tooltips.
    (*) convert QString("") to QObject::tr("") in the pisi classes.

    (*) Prepare program help.

    (*) Test program.

    (*) Give translation files path at the pisi package.

Later:
------
    (*) Compressing the source folder process can be able to cancel. Now, qprocess runs and we are waiting to finish its job.

    (*) create translation.xml

    (*) multiple archive source support.

    (*) make autocomplete for actions api.

    (*) pspec.xml view will add.
        (*) Newly created or imported pspec.xml file will shown to the user. GUI changes
            will reflect to user.

    (*) Source::Patch properties will reflect to gui. For now, only level is working.





Sign Map:
----------------
    (*) not done
    (-) doing
    (X) done
